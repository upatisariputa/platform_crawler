# Generated by Django 2.2.7 on 2019-12-09 09:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('bj_key', models.AutoField(primary_key=True, serialize=False)),
                ('bj_num', models.IntegerField()),
                ('bj_name', models.CharField(blank=True, max_length=50, null=True)),
                ('bj_img_url', models.CharField(blank=True, max_length=300, null=True)),
                ('bj_cre_date', models.DateField()),
                ('bj_platform', models.CharField(blank=True, max_length=50, null=True)),
                ('bj_url', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubGapDay',
            fields=[
                ('sub_d_key', models.AutoField(primary_key=True, serialize=False)),
                ('sub_d_date', models.DateField()),
                ('sub_d_cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sub_gap_day',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubGapMonth',
            fields=[
                ('sub_w_key', models.AutoField(primary_key=True, serialize=False)),
                ('sub_w_date', models.DateField(blank=True, null=True)),
                ('sub_w_cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sub_gap_month',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubGapWeek',
            fields=[
                ('sub_d_key', models.AutoField(primary_key=True, serialize=False)),
                ('sub_w_date', models.DateField(blank=True, null=True)),
                ('sub_d_cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sub_gap_week',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('sub_key', models.AutoField(primary_key=True, serialize=False)),
                ('sub_date', models.DateField(blank=True, null=True)),
                ('sub_cnt', models.IntegerField(blank=True, null=True)),
                ('sub_year', models.SmallIntegerField(blank=True, null=True)),
                ('sub_month', models.IntegerField(blank=True, null=True)),
                ('sub_day', models.IntegerField(blank=True, null=True)),
                ('sub_week', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscribe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Total',
            fields=[
                ('total_key', models.AutoField(primary_key=True, serialize=False)),
                ('total_date', models.DateField(blank=True, null=True)),
                ('total_view_cnt', models.BigIntegerField(blank=True, null=True)),
                ('total_like_cnt', models.IntegerField(blank=True, null=True)),
                ('total_unli_cnt', models.IntegerField(blank=True, null=True)),
                ('total_year', models.SmallIntegerField(blank=True, null=True)),
                ('total_month', models.IntegerField(blank=True, null=True)),
                ('total_week', models.IntegerField(blank=True, null=True)),
                ('total_day', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'total',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_key', models.AutoField(primary_key=True, serialize=False)),
                ('video_num', models.IntegerField()),
                ('video_name', models.CharField(blank=True, max_length=50, null=True)),
                ('video_url', models.TextField(blank=True, null=True)),
                ('video_date', models.DateField(blank=True, null=True)),
                ('video_up_date', models.DateField(blank=True, null=True)),
                ('video_like_cnt', models.IntegerField(blank=True, null=True)),
                ('video_unli_cnt', models.IntegerField(blank=True, null=True)),
                ('video_cmt_cnt', models.IntegerField(blank=True, null=True)),
                ('video_view_cnt', models.BigIntegerField(blank=True, null=True)),
                ('video_year', models.SmallIntegerField(blank=True, null=True)),
                ('video_month', models.IntegerField(blank=True, null=True)),
                ('video_day', models.IntegerField(blank=True, null=True)),
                ('video_week', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGapDay',
            fields=[
                ('video_d_key', models.AutoField(primary_key=True, serialize=False)),
                ('video_d_date', models.DateField()),
                ('video_d_like', models.IntegerField()),
                ('video_d_unli', models.IntegerField()),
                ('video_d_view', models.IntegerField()),
                ('video_d_cmt', models.IntegerField()),
            ],
            options={
                'db_table': 'video_gap_day',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGapMonth',
            fields=[
                ('video_m_key', models.AutoField(primary_key=True, serialize=False)),
                ('video_m_date', models.DateField()),
                ('video_m_like', models.IntegerField()),
                ('video_m_unli', models.IntegerField()),
                ('video_m_view', models.IntegerField()),
                ('video_m_cmt', models.IntegerField()),
            ],
            options={
                'db_table': 'video_gap_month',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGapWeek',
            fields=[
                ('video_w_key', models.AutoField(primary_key=True, serialize=False)),
                ('video_w_date', models.DateField()),
                ('video_w_like', models.IntegerField()),
                ('video_w_unli', models.IntegerField()),
                ('video_w_view', models.IntegerField()),
                ('video_w_cmt', models.IntegerField()),
            ],
            options={
                'db_table': 'video_gap_week',
                'managed': False,
            },
        ),
    ]
